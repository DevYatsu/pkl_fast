2.5e2
22
0o1010
0x1010
0b1010
true
false
2_200
23.2e+3
.2
.0e+4
1_2.2_1e-4
1_33333_3333
NaN
Infinity
-Infinity
ident
$i
_i007
id_3test_ // test doc comment
`illegal id \n test 332+ -,true= bpp; ` // test comment
"test"
"""
test \n \t efefd \u{F233}  \(22)
"""
##" delimited string yes "\# \n "##

call(arg1, arg2, 22)

test().call.a().`hey`.x()

test()
    .call
    .a() //a
    .`hey`
    .x()

typealias Test = List<Number>
typealias StringMap< Value, Other> = Map<String, Value>

module parrot
module com.x.y

extends "pigeon.pkl"

import "other.pkl" as test

local const x: Int = 222
fixed const y: Float = 2.3
local z: List<Number>(length) = // List(2, 3.4e2)
22
name = "Parrot"
diet = "Berries"
extinct = false

obj {
    test = 222
    x = 3
}
amended = (obj) {
    test = 2
    x = 1
}
function say(a: Int) = "Pkl is great!"

class Bird {
  name: String
  hidden taxonomy: Taxonomy
}
