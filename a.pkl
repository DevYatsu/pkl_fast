birds = new Listing {
  new {
    name = "Pigeon"
    diet = "Seed"
  }
  new {
    name = "Parrot"
    diet = "Berries"
  }
}
firstBirdName = birds[0].name
secondBirdDiet = birds[1].diet
listing = new Listing {
  "Pigeon"
  3.min
  new Listing {
    "Barn owl"
  }
}
listing = new Listing {
  local pigeon = "Pigeon"
  pigeon
  "A " + pigeon + " is a bird"
}
birds = new Listing {
  new {
    name = "Pigeon"
    diet = "Seeds"
  }
  new {
    name = "Parrot"
    diet = "Berries"
  }
}
birds2 = (birds) {
  new {
    name = "Barn owl"
    diet = "Mice"
  }
  [0] {
    diet = "Worms"
  }
  [1] = new {
    name = "Albatross"
    diet = "Fish"
  }
}
birds = new Listing {
  new {
    name = "Pigeon"
    diet = "Seeds"
  }
  (this[0]) {
    name = "Parrot"
  }
}
newBirds = (birds) {
  [0] {
    diet = "Worms"
  }
}

secondBirdDiet = newBirds[1].diet
birds = new Listing {
  new {
    name = "Pigeon"
    diet = "Seeds"
  }
  new {
    name = "Parrot"
    diet = "Berries"
  }
}
reversedbirds = birds
  .toList()
  .reverse()
  .toListing()

mapping = new Mapping {
  ["number"] = 42
  ["list"] = List("Pigeon", "Parrot")
  ["nested mapping"] {
    ["Pigeon"] {
      lifespan = 20
      diet = "Seeds"
    }
  }
}
mapping = new Mapping {
  [3.min] = 42
  [new Dynamic { name = "Pigeon" }] = "abc"
}
mapping = new Mapping {
  ["Pigeon".reverse()] = 42
}
mapping = new Mapping {
  local parrot = "Parrot"
  ["Pigeon"] {
    friend = parrot
  }
}
birds = new Mapping {
  ["Pigeon"] {
    lifespan = 8
    diet = "Seeds"
  }
  ["Parrot"] {
    lifespan = 20
    diet = "Berries"
  }
}
birds2 = (birds) {
  ["Barn owl"] {
    lifespan = 15
    diet = "Mice"
  }
  ["Pigeon"] {
    diet = "Seeds"
  }
  ["Parrot"] = new {
    lifespan = 20
    diet = "Berries"
  }
}
birds = new Mapping {
  ["Pigeon"] {
    lifespan = 8
    diet = "Seeds"
  }
  ["Parrot"] = (this["Pigeon"]) {
    lifespan = 20
  }
}
birds2 = (birds) {
  ["Pigeon"] {
    diet = "Seeds"
  }
}

parrotDiet = birds2["Parrot"].diet
birds = new Mapping {
  ["Pigeon"] {
    lifespan = 8
    diet = "Seeds"
  }
  ["Parrot"] = (this["Pigeon"]) {
    lifespan = 20
  }
}
result = birds
  .toMap()
  .mapKeys((key, value) -> key.reverse())
  .toMapping()
  birds = new Mapping {
    default {
      lifespan = 8
    }
    ["Pigeon"] {
      diet = "Seeds"
    }
    ["Parrot"] {
      lifespan = 20
    }
  }
  birds2 = (birds) {
    default {
      lifespan = 8
      diet = "Seeds"
    }
  }
  birds2 = new Mapping {
    ["Pigeon"] {
      lifespan = 8
      diet = "Seeds"
    }
    ["Parrot"] {
      lifespan = 20
      diet = "Berries"
    }
  }
  names = birds.toList().map((it) -> it.name) as List<String>
  map = Map("Pigeon", 5.gb, "Parrot", 10.gb)
  parrotValue = map["Parrot"]
  abilities {
    "chirping"
    when (isSinger) {
      "singing"
    }
    "whistling"
  }

  abilitiesByBird {
    ["Barn owl"] = "hooing"
    when (isSinger) {
      ["Parrot"] = "singing"
    }
    ["Parrot"] = "whistling"
  }
  isSinger = false

  parrot {
    lifespan = 20
    when (isSinger) {
      hobby = "singing"
      idol = "Aretha Franklin"
    } else {
      hobby = "whistling"
      idol = "Wolfgang Amadeus Mozart"
    }
  }
  names = List("Pigeon", "Barn owl", "Parrot")

  birds {
    for (_name in names) {
      new {
        name = _name
        lifespan = 42
      }
    }
  }
  namesAndLifespans = Map("Pigeon", 8, "Barn owl", 15, "Parrot", 20)

  birdsByName {
    for (_name, _lifespan in namesAndLifespans) {
      [_name] {
        name = _name
        lifespan = _lifespan
      }
    }
  }
  entries1 {
    ["Pigeon"] = "Piggy the Pigeon"
    ["Barn owl"] = "Barney the Barn owl"
  }

  entries2 {
    ...entries1
  }

  elements1 { 1; 2 }

  elements2 {
    ...elements1
  }

  properties1 {
    name = "Pigeon"
    diet = "Seeds"
  }

  properties2 {
    ...properties1
  }
